function y = MomentEq2(x, e1, e2, n)

EdgeRecord = [];
EdgeRecordSquare = [];
pi1 = x(1);
pi2 = x(2);
% f = (pi1+pi1)/2;
f = pi1*pi2/(pi1+pi2);
for k = 0:n

    tmp0 = NchooseK(k,2)*pi1 + NchooseK(n-k,2)*pi2 + NchooseK(k,1)*NchooseK(n-k,1)*f;
    
    EdgeRecord = [EdgeRecord, tmp0];

    tmp1 = NchooseK(k,2) * pi1 * 2 * ...
        (NchooseK(n-k,1) * f + (k-2) * pi1) ...
        + (n-k) * k * f * ...
        ((n-k-1)*(pi2+f) + (k-1)*(f+pi1)) ...
        + NchooseK(n-k,2) * pi2 * 2 * ...
        ((n-k-2) * pi2 + NchooseK(k,1) * f);
    
    tmp2 = NchooseK(k,2) * pi1 * ...
        (NchooseK(n-k,2) *pi2 ...
        + NchooseK(n-k,1) * NchooseK(k-2,1) *f ...
        + NchooseK(k-2,2) *pi1) ...
        + NchooseK(k,1) * NchooseK(n-k,1) * f * ...
        (NchooseK(n-k-1,2) * pi2 ...
        + NchooseK(n-k-1,1) * NchooseK(k-1,1) * f ...
        + NchooseK(k-1,2) * pi1) ...
        + NchooseK(n-k,2) * pi2 * ...
        (NchooseK(n-k-2,2) * pi2 ...
        + NchooseK(n-k-2,1) *  NchooseK(k,1) *  f ...
        + NchooseK(k,2) * pi1);

    tmp = tmp0+tmp1+tmp2;
    EdgeRecordSquare = [EdgeRecordSquare tmp];
end
y1 = sum(EdgeRecord.*ProbOnVertex(n));
y2 = sum(EdgeRecordSquare.*ProbOnVertex(n));

y = (y1-e1)^2+(y2-e2)^2;
